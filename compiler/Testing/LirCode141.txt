# Error Strings:
str_err_checkNullRef: "Runtime Error: Null pointer dereference!" 
str_err_checkArrayAccess: "Runtime Error: Array index out of bounds!" 
str_err_checkSize: "Runtime Error: Array allocation with non-positive array size!" 
str_err_checkZero: "Runtime Error: Division by zero!" 

_DV_A: []

# Error verification functions:

__checkArrayAccess:
ArrayLength a, R01
Compare i, R01
JumpLE _error_checkArrayAccess
Move i, R01
Compare 0, R01
JumpL _error_checkArrayAccess
Return 9999

_error_checkArrayAccess:
Library __println(str_err_checkArrayAccess), Rdummy
Library __exit(1), Rdummy
Return 9999



_ic_main:
# Assignment:
# Evaluate the expression:
Library __allocateArray(20), R0
Move R0, v2a
# //Assignment
# Assignment:
# Evaluate the expression:
Library __allocateArray(40), R1
Move R1, v2b
# //Assignment
# Assignment:
# Evaluate the expression:
Move 1, R2
Move 1, R3
Neg R3
Move v2b, R5
StaticCall __checkArrayAccess(a=R5, i=0),Rdummy
MoveArray R5[0], R4
# Assign the expression:
MoveArray R3, R5[0]
# //Assignment
# Assignment:
# Evaluate the expression:
Move v2b, R7
StaticCall __checkArrayAccess(a=R7, i=0),Rdummy
MoveArray R7[0], R6
Move v2a, R9
StaticCall __checkArrayAccess(a=R9, i=R6),Rdummy
MoveArray R9[R6], R8
Move v2a, R11
StaticCall __checkArrayAccess(a=R11, i=0),Rdummy
MoveArray R11[0], R10
# Assign the expression:
MoveArray R8, R11[0]
# //Assignment
Move v2a, R13
StaticCall __checkArrayAccess(a=R13, i=0),Rdummy
MoveArray R13[0], R12
Library __printi(R12), Rdummy
Library __exit(0), Rdummy

